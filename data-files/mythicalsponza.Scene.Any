
/* -*- c++ -*- */
{ 
    entities = { 
        building = 
        /* Each entity has a name and is an instance of a model.  The instantiation syntax accepts
                two (optional) arguments: a position spline (which can be a single position), and a
                pose spline (which can be a single pose). */
        VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(0, 0, 0, -132.604 ); 
            model = "buildingModel"; 
            visible = true; 
        }; 
        
        camera = 
        /* fillLight = Light {
                            type = "DIRECTIONAL";
                            frame = CFrame::fromXYZYPRDegrees(inf, inf, inf, 15, 85, 15);             
                            biradiance = Biradiance3::fromARGB(0x1e324d);
                            producesIndirectIllumination = false;
                            castsShadows = false;
                        }; */
        Camera { 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = true; 
                farBlurRadiusFraction = 0.01; 
                farBlurryPlaneZ = -120; 
                farSharpPlaneZ = -11; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "ARTIST"; 
                nearBlurRadiusFraction = 0.01; 
                nearBlurryPlaneZ = -0.1; 
                nearSharpPlaneZ = -1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = false; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = Spline { 
                    control = ( 0, 0.0787234, 0.306383, 0.808511, 0.925532 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.169565, 0.32174, 0.743478, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.05; 
                vignetteSizeFraction = 0.17; 
                vignetteTopStrength = 0.5; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(-10, 1.7, -2.4, -112, 19 ); 
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 15; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -150; 
                fovDegrees = 60; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.1; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        skybox = Skybox { 
            texture = "cubemap/noonclouds/noonclouds_*.png"; 
        }; 
        
        sun = Light { 
            attenuation = ( 0, 0, 1 ); 
            bulbPower = Power3(4e+06 ); 
            castsShadows = true; 
            enabled = true; 
            frame = CFrame::fromXYZYPRDegrees(-15.5767, 207.755, -41.952, -164.03, -76.7166, 76.514 ); 
            nearPlaneZLimit = -170; 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapBias = 0.05; 
            shadowMapSize = Vector2int16(2048, 2048 ); 
            spotHalfAngleDegrees = 5; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        unicorn = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(0.799366, -0.144273, 1.86751, -54.3358 ); 
            model = "unicorn0"; 
            visible = true; 
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.1; 
            blurRadius = 4; 
            blurStepSize = 2; 
            depthPeelSeparationHint = 0.02; 
            edgeSharpness = 1; 
            enabled = true; 
            intensity = 2; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 11; 
            radius = 1; 
            temporalFilterSettings = TemporalFilter::Settings { 
                alpha = 0; 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
            }; 
            
            temporallyVarySamples = false; 
            useDepthPeelBuffer = true; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
        }; 
        
        emissiveRadianceScale = 1; 
        environmentMap = Texture::Specification { 
            encoding = Texture::Encoding { 
                readMultiplyFirst = 0.6; 
            }; 
            
            filename = "cubemap/uffizi/uffizi*.jpg"; 
        }; 
        
        lightMapRadianceScale = 1; 
        radianceScale = 1; 
    }; 
    
    models = { 
        buildingModel = ArticulatedModel::Specification { 
            filename = "model/crytek_sponza/sponza.zip/sponza.obj"; 
            scale = 0.011; 
        }; 
        
        unicorn0 = ArticulatedModel::Specification { 
            cachable = true; 
            cleanGeometrySettings = ArticulatedModel::CleanGeometrySettings { 
                allowVertexMerging = true; 
                forceComputeNormals = false; 
                forceComputeTangents = false; 
                forceVertexMerging = true; 
                maxEdgeLength = inf; 
                maxNormalWeldAngleDegrees = 8; 
                maxSmoothAngleDegrees = 65; 
            }; 
            
            filename = "models/unicorn.obj"; 
            heightfieldOptions = HeightfieldOptions { 
                generateBackfaces = false; 
                textureScale = Vector2(1, 1 ); 
            }; 
            
            meshMergeOpaqueClusterRadius = "ALL"; 
            meshMergeTransmissiveClusterRadius = "NONE"; 
            objOptions = OBJOptions { 
                stripRefraction = false; 
                texCoord1Mode = "NONE"; 
            }; 
            
            scale = 0.196518; 
            stripLightMapCoords = false; 
            stripLightMaps = false; 
            stripMaterials = false; 
        }; 
        
    }; 
    
    name = "MythicalSponza"; 
} 